user  nginx;
#     количество использования ядер
worker_processes  auto;

events {
#     количество запросов на одно ядро
    worker_connections  1024;
}

http {

#     разрешает|запрещает использование sendfile()
    sendfile            on;

#     передавать файл полными пакетами
    tcp_nopush          on;

#     включается при переходе соединения в состояние keep-alive, включается на SSL-соединениях,
#     при небуферизованном проксировании и при проксировании WebSocket.
    tcp_nodelay         on;

#     в течение которого keep-alive соединение с клиентом не будет закрыто со стороны сервера.
#     Значение 0 запрещает keep-alive соединения с клиентами.
    keepalive_timeout            65;

#     Задаёт максимальный размер хэш-таблиц типов
    types_hash_max_size          2048;

#     Подключение типов файлов
    include       /etc/nginx/mime.types;

#     Подключение настроек по умолчанию
    #  include       /etc/nginx/conf.d/*.conf;
#_____________________________________________________________________________
#     Ограничение запросов на сервер
#     Ограничить запросы к серверу до 5 магабайт
#     limit_conn_zone $server_name zone=per_vhost:5m;
#     Ограничить запросы по IP адрессу до 5 магабайт
#    limit_conn_zone $binary_remote_addr zone=per_vhost:5m;
#_____________________________________________________________________________
#     Задаёт путь и другие параметры кэша.
#     Задаёт путь и другие параметры кэша.
    fastcgi_cache_path /tmp levels=1:2 keys_zone=microcache:10m max_size=500m;

#     Задаёт ключ для кэширования
    fastcgi_cache_key "$scheme$request_method$host$request_uri";

#     Добавляет указанное поле в заголовок ответа при условии,
#     что код ответа равен 200, 201 (1.3.10), 204, 206, 301, 302, 303, 304, 307
    add_header microcache-status $upstream_cache_status;
#     $upstream_cache_status - хранит статус доступа к кэшу ответов (0.8.3).
#     Статус может быть одним из “MISS”, “BYPASS”, “EXPIRED”, “STALE”, “UPDATING”, “REVALIDATED” или “HIT”.

server {
        # http
#         listen 80;
#         listen [::]:80;
#         server_name localhost;
    
#_____________________________________________________________________________
# Ограничения
# Список разрешенных IP
include /etc/nginx/blacklist.conf;
# Запрещенные слова в запросе
# if ($request_uri ~* (rss|feed|xmlrpc|faq|style) ){
#     return 403;
# }
            
#_____________________________________________________________________________
# Включение логов
#     Задаёт путь, формат и настройки буферизованной записи в лог.
    access_log  /var/log/nginx/host.access.log;
#     Конфигурирует запись в лог.
    error_log /var/log/nginx/host.error.log;
#_____________________________________________________________________________
#     Включение сжатия GZIP
    gzip on;
#     Минимальное значение в байтах
    gzip_min_length 100;
#     Уровень сжатия, рекомендуемое до 5
    gzip_comp_level 3;
#     Тип файлов для сжатия
    gzip_types text/javascript;
    gzip_types text/css;
    gzip_types text/plain;
#     Исключение для IE6
    gzip_disable "msie6";
#_____________________________________________________________________________
#     Установить кеширование(0-on, 1-off)
    set $no_cache 1;
#     Не кешировать пост запросы
    if ( $request_method = POST ) { set $no_cache 1; }
#     Не кешировать get запросы
    if ( $query_string != "" ) { set $no_cache 1; }
#     Не кешировать админ часть на примере WordPress
    if ($request_uri ~* "/wp-admin" ) { set $no_cache 1; }
#_____________________________________________________________________________
#     Block css, js, img
    location ~* \.(css|js|png|jpeg|jpg)$ {
#     Не вести логи файлов
    access_log off;
#     Срок, когда закешированный браузером файл необходимо будет заново запросить на сервере(М-месяц, 30d-дней)
#     expires 1M;
#     Добавить заголовки
    add_header Pragma public;
    add_header Cache-Control public;
    add_header Vary Accept-Encoding;
#   Пользовательский заголовок
    add_header Author "Storchak Aleksander";
    }
#_____________________________________________________________________________
#     Block mp4
    location ~ \.mp4$ {
    root   /usr/share/nginx/html;
    mp4;
    mp4_buffer_size 4M;
    mp4_max_buffer_size 10M;
    }
 
    # redirect server error pages to the static page /50x.html
    #
    root   /usr/share/nginx/html/public;
    index  index.php index.html;
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
    location  / {
                    error_page  404              /404.html;
                    proxy_pass http://192.168.0.107:8084;
#                     try_files $uri $uri/ =404;
                    try_files $uri $uri/ /index.php?$args;
                 }
#     location / {
#                       proxy_pass http://192.168.0.107:8084;
#                       error_page  404              /404.html;
#                       try_files $uri $uri/ =404;
#     }
#     location ~ \.php$ {
#
#        include        fastcgi_params;
#        fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name;
#        fastcgi_pass 127.0.0.1:9000;
#_____________________________________________________________________________
#      Параметр key_zone    
#        fastcgi_cache microcache;
# #      Код ответа и максимальное время хранения
#        fastcgi_cache_valid 200 60m;
#     #    fastcgi_cache_bypass $no_cache;
#     #    fastcgi_no_cache $no_cache;
#
#     }
    }
}